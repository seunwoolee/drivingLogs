Index: app/src/main/java/com/example/traveldriving/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.traveldriving.activity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.view.ActionMode;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.Manifest;\r\nimport android.Manifest.permission;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.PendingIntent;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.ComponentName;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.ServiceConnection;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.IBinder;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.traveldriving.BuildConfig;\r\nimport com.example.traveldriving.R;\r\nimport com.example.traveldriving.adapter.AdapterListDrivingLog;\r\nimport com.example.traveldriving.model.DrivingLog;\r\nimport com.example.traveldriving.service.MyService;\r\nimport com.example.traveldriving.utils.Tools;\r\nimport com.example.traveldriving.widget.LineItemDecoration;\r\n\r\nimport java.util.List;\r\n\r\nimport io.realm.Realm;\r\n\r\n\r\n@RequiresApi(api = Build.VERSION_CODES.Q)\r\npublic class MainActivity extends AppCompatActivity {\r\n    private static final String TAG = \"AppCompatActivity\";\r\n    private static final int REQUEST_LOCATION_PERMISSION = 200;\r\n    private static final String[] needPermissions = {\r\n            permission.ACCESS_COARSE_LOCATION,\r\n            permission.ACCESS_FINE_LOCATION,\r\n            permission.ACCESS_BACKGROUND_LOCATION,\r\n    };\r\n\r\n    private RecyclerView mRecyclerView;\r\n\r\n    private Realm mRealm;\r\n\r\n    private AdapterListDrivingLog mAdapter;\r\n    private ActionModeCallback mActionModeCallback;\r\n    private ActionMode mActionMode;\r\n\r\n    private boolean mIsBound = false;\r\n    private MyService mMyService;\r\n\r\n    ImageButton mStartBtn;\r\n\r\n    private ServiceConnection serviceConnection = new ServiceConnection() {\r\n        @Override\r\n        public void onServiceConnected(ComponentName name, IBinder service) {\r\n            mIsBound = true;\r\n            MyService.MyServiceBinder binder = (MyService.MyServiceBinder) service;\r\n            mMyService = binder.getService();\r\n            if (mMyService.isDriving()) {\r\n                mStartBtn.setImageResource(R.drawable.btn_stop);\r\n            } else {\r\n                mStartBtn.setImageResource(R.drawable.btn_start);\r\n            }\r\n\r\n            mStartBtn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    if (!mMyService.isDriving()) {\r\n                        mMyService.startDriving();\r\n                        mStartBtn.setImageResource(R.drawable.btn_stop);\r\n                    } else {\r\n                        mMyService.stopDriving();\r\n                        mStartBtn.setImageResource(R.drawable.btn_start);\r\n                        mAdapter.notifyDataSetChanged();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public void onServiceDisconnected(ComponentName name) {\r\n            mIsBound = false;\r\n        }\r\n    };\r\n\r\n    public void requestPermission() {\r\n        for (String permission : needPermissions) {\r\n            if (ActivityCompat.checkSelfPermission(this, permission) != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(\r\n                        this,\r\n                        needPermissions,\r\n                        REQUEST_LOCATION_PERMISSION);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        Log.d(TAG, \"onDestroy\");\r\n        if (mIsBound) {\r\n            mIsBound = false;\r\n            unbindService(serviceConnection);\r\n        }\r\n        mRealm.close();\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        boolean permissionToRecordAccepted = true;\r\n\r\n        if (requestCode == REQUEST_LOCATION_PERMISSION) {\r\n            for (int result : grantResults) {\r\n                if (result != PackageManager.PERMISSION_GRANTED) {\r\n                    permissionToRecordAccepted = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!permissionToRecordAccepted) {\r\n            Toast.makeText(MainActivity.this, \"권한이 거부되었습니다. 권한을 승인해주세요.\", Toast.LENGTH_LONG).show();\r\n            new Handler().postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    Intent intent = new Intent();\r\n                    intent.setAction(\r\n                            Settings.ACTION_APPLICATION_DETAILS_SETTINGS);\r\n                    Uri uri = Uri.fromParts(\"package\",\r\n                            BuildConfig.APPLICATION_ID, null);\r\n                    intent.setData(uri);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    startActivity(intent);\r\n                    finish();\r\n                }\r\n            }, 1500);\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        mStartBtn = findViewById(R.id.startBtn);\r\n\r\n        Realm.init(this);\r\n        mRealm = Realm.getDefaultInstance();\r\n\r\n        initComponent();\r\n\r\n        requestPermission();\r\n\r\n        Intent intent = new Intent(this, MyService.class);\r\n        startService(intent);\r\n        bindService(intent, serviceConnection, Context.BIND_AUTO_CREATE);\r\n    }\r\n\r\n    private void initComponent() {\r\n        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerView);\r\n        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n        mRecyclerView.addItemDecoration(new LineItemDecoration(this, LinearLayout.VERTICAL));\r\n        mRecyclerView.setHasFixedSize(true);\r\n\r\n        List<DrivingLog> items = mRealm.where(DrivingLog.class).findAll();\r\n\r\n        mAdapter = new AdapterListDrivingLog(this, items);\r\n        mRecyclerView.setAdapter(mAdapter);\r\n\r\n        mAdapter.setOnCheckBoxClickListener(new AdapterListDrivingLog.OnCheckboxClickListener() {\r\n            @Override\r\n            public void onItemClick(int pos) {\r\n                toggleSelection(pos);\r\n            }\r\n        });\r\n\r\n        mAdapter.setOnItemClickListener(new AdapterListDrivingLog.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(View view, DrivingLog obj, int pos) {\r\n                if (mAdapter.getSelectedItemCount() > 0) {\r\n                    enableActionMode(pos);\r\n                } else {\r\n                    DrivingLog drivingLog = items.get(pos);\r\n                    Intent intent = new Intent(getApplicationContext(), MapsActivity.class);\r\n                    intent.putExtra(\"drivingLogId\", drivingLog.getId());\r\n                    startActivity(intent);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mAdapter.setOnMoreButtonClickListener(new AdapterListDrivingLog.OnMoreButtonClickListener() {\r\n            @Override\r\n            public void onItemClick(View view, DrivingLog obj, int pos) {\r\n                enableActionMode(pos);\r\n            }\r\n\r\n        });\r\n\r\n        mActionModeCallback = new ActionModeCallback();\r\n\r\n    }\r\n\r\n    private void enableActionMode(int position) {\r\n        if (mActionMode == null) {\r\n            mActionMode = startSupportActionMode(mActionModeCallback);\r\n\r\n        }\r\n        toggleSelection(position);\r\n    }\r\n\r\n    private void toggleSelection(int position) {\r\n        mAdapter.toggleSelection(position);\r\n        int count = mAdapter.getSelectedItemCount();\r\n\r\n        if (count == 0) {\r\n            mActionMode.finish();\r\n        } else {\r\n            mActionMode.invalidate();\r\n        }\r\n    }\r\n\r\n    private class ActionModeCallback implements ActionMode.Callback {\r\n        @Override\r\n        public boolean onCreateActionMode(ActionMode mode, Menu menu) {\r\n            mAdapter.setActionMode(true);\r\n            mAdapter.notifyDataSetChanged();\r\n            Tools.setSystemBarColor(MainActivity.this, R.color.blue_grey_700);\r\n            mode.getMenuInflater().inflate(R.menu.menu_delete, menu);\r\n            return true;\r\n        }\r\n\r\n        @Override\r\n        public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\r\n            int id = item.getItemId();\r\n            if (id == R.id.action_delete) {\r\n                deleteInboxes();\r\n                mode.finish();\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onDestroyActionMode(ActionMode mode) {\r\n            mAdapter.clearSelections();\r\n            mActionMode = null;\r\n            mAdapter.setActionMode(false);\r\n            mAdapter.notifyDataSetChanged();\r\n            Tools.setSystemBarColor(MainActivity.this, R.color.colorPrimary);\r\n        }\r\n    }\r\n\r\n    private void deleteInboxes() {\r\n        List<Integer> selectedItemPositions = mAdapter.getSelectedItems();\r\n        List<DrivingLog> drivingLogs = mAdapter.getItems();\r\n\r\n        for (int i = selectedItemPositions.size() - 1; i >= 0; i--) {\r\n            int selectedPos = selectedItemPositions.get(i);\r\n            mRealm.beginTransaction();\r\n            drivingLogs.get(selectedPos).deleteFromRealm();\r\n            mRealm.commitTransaction();\r\n            mAdapter.resetCurrentIndex();\r\n        }\r\n        mAdapter.notifyDataSetChanged();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/traveldriving/activity/MainActivity.java	(revision 3e03c47501211c8fbfb1e8966018fab1f3eb948d)
+++ app/src/main/java/com/example/traveldriving/activity/MainActivity.java	(date 1603670460114)
@@ -35,6 +35,7 @@
 import android.view.View;
 import android.widget.ImageButton;
 import android.widget.LinearLayout;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import com.example.traveldriving.BuildConfig;
@@ -72,6 +73,7 @@
     private MyService mMyService;
 
     ImageButton mStartBtn;
+    TextView mDrivingTime;
 
     private ServiceConnection serviceConnection = new ServiceConnection() {
         @Override
@@ -80,6 +82,10 @@
             MyService.MyServiceBinder binder = (MyService.MyServiceBinder) service;
             mMyService = binder.getService();
             if (mMyService.isDriving()) {
+//                String time = String.format("%02d", hour) + ":" + String.format("%02d", minute) + ":" + String.format("%02d", second);
+//                mDrivingTime.setText(time);
+//                mDrivingDistance.setText(String.format("%d.%ckm", (0 / 1000), String.valueOf(0 % 1000).charAt(0)));
+
                 mStartBtn.setImageResource(R.drawable.btn_stop);
             } else {
                 mStartBtn.setImageResource(R.drawable.btn_start);
@@ -167,6 +173,7 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         mStartBtn = findViewById(R.id.startBtn);
+        mDrivingTime = findViewById(R.id.drivingTime);
 
         Realm.init(this);
         mRealm = Realm.getDefaultInstance();
